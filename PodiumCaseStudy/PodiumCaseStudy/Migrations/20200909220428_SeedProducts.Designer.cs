// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PodiumCaseStudy.Data;

namespace PodiumCaseStudy.Migrations
{
    [DbContext(typeof(PodiumDbContext))]
    [Migration("20200909220428_SeedProducts")]
    partial class SeedProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.MortgageProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MortgageRequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MortgageRequirementId");

                    b.ToTable("MortgageProposals");
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.MortgageRequirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepositAmount")
                        .HasColumnType("int");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("MortgageRequirements");
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Lender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanToValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanType")
                        .HasColumnType("int");

                    b.Property<Guid?>("MortgageProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MortgageProposalId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac9d10eb-639c-44a7-b8e0-94c799824b63"),
                            InterestRate = 0.02m,
                            Lender = "Bank A",
                            LoanToValue = 0.6m,
                            LoanType = 1
                        },
                        new
                        {
                            Id = new Guid("e3306135-c662-483a-884b-e6123ecf4697"),
                            InterestRate = 0.03m,
                            Lender = "Bank B",
                            LoanToValue = 0.6m,
                            LoanType = 0
                        },
                        new
                        {
                            Id = new Guid("4ebd1d33-7215-44d0-9f1b-a8f45f13c882"),
                            InterestRate = 0.04m,
                            Lender = "Bank C",
                            LoanToValue = 0.9m,
                            LoanType = 1
                        });
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.MortgageProposal", b =>
                {
                    b.HasOne("PodiumCaseStudy.Data.Entities.MortgageRequirement", "MortgageRequirement")
                        .WithMany()
                        .HasForeignKey("MortgageRequirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.MortgageRequirement", b =>
                {
                    b.HasOne("PodiumCaseStudy.Data.Entities.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodiumCaseStudy.Data.Entities.Product", b =>
                {
                    b.HasOne("PodiumCaseStudy.Data.Entities.MortgageProposal", null)
                        .WithMany("Products")
                        .HasForeignKey("MortgageProposalId");
                });
#pragma warning restore 612, 618
        }
    }
}
